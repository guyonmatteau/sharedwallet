{
  "fileName": "MappingStruct.sol",
  "contractName": "MyMapping",
  "source": "//\"SPDX-License-Identifier: UNLICENSED\"\npragma solidity ^0.6.3;\n\ncontract MyMapping {\n\n    struct Payment {\n        uint amount;\n        uint timestamp;\n    }\n    \n    struct Balance {\n        uint totalBalance;\n        uint numPayment;\n        mapping(uint => Payment) payments;\n    }\n\n    mapping(address => Balance) public balanceReceived;\n    \n    function getBalance() public view returns(uint) {\n        return address(this).balance;\n    }\n\n    function sendMoney() public payable {\n        \n        balanceReceived[msg.sender].totalBalance += msg.value;\n\n    }\n}",
  "sourcePath": "contracts/MappingStruct.sol",
  "sourceMap": "65:504:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "65:504:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;352:93;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;451:116;;;:::i;:::-;;291:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;352:93;394:4;425;417:21;;;410:28;;352:93;:::o;451:116::-;550:9;506:15;:27;522:10;506:27;;;;;;;;;;;;;;;:40;;;:53;;;;;;;;;;;451:116::o;291:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceReceived",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numPayment",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sendMoney",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "ast": {
    "absolutePath": "contracts/MappingStruct.sol",
    "exportedSymbols": {
      "MyMapping": [
        45
      ]
    },
    "id": 46,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 45,
        "linearizedBaseContracts": [
          45
        ],
        "name": "MyMapping",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "MyMapping.Payment",
            "id": 6,
            "members": [
              {
                "constant": false,
                "id": 3,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 6,
                "src": "116:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "116:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 6,
                "src": "137:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "137:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Payment",
            "nodeType": "StructDefinition",
            "scope": 45,
            "src": "91:67:0",
            "visibility": "public"
          },
          {
            "canonicalName": "MyMapping.Balance",
            "id": 15,
            "members": [
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "totalBalance",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15,
                "src": "193:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "193:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "numPayment",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15,
                "src": "220:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "220:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "payments",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15,
                "src": "245:33:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Payment_$6_storage_$",
                  "typeString": "mapping(uint256 => struct MyMapping.Payment)"
                },
                "typeName": {
                  "id": 13,
                  "keyType": {
                    "id": 11,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "253:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "245:24:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Payment_$6_storage_$",
                    "typeString": "mapping(uint256 => struct MyMapping.Payment)"
                  },
                  "valueType": {
                    "contractScope": null,
                    "id": 12,
                    "name": "Payment",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6,
                    "src": "261:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$6_storage_ptr",
                      "typeString": "struct MyMapping.Payment"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Balance",
            "nodeType": "StructDefinition",
            "scope": 45,
            "src": "168:117:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d18a42e1",
            "id": 19,
            "mutability": "mutable",
            "name": "balanceReceived",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 45,
            "src": "291:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$15_storage_$",
              "typeString": "mapping(address => struct MyMapping.Balance)"
            },
            "typeName": {
              "id": 18,
              "keyType": {
                "id": 16,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "299:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "291:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$15_storage_$",
                "typeString": "mapping(address => struct MyMapping.Balance)"
              },
              "valueType": {
                "contractScope": null,
                "id": 17,
                "name": "Balance",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 15,
                "src": "310:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Balance_$15_storage_ptr",
                  "typeString": "struct MyMapping.Balance"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "400:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 26,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "425:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MyMapping_$45",
                            "typeString": "contract MyMapping"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MyMapping_$45",
                            "typeString": "contract MyMapping"
                          }
                        ],
                        "id": 25,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "417:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 27,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "417:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "417:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 23,
                  "id": 29,
                  "nodeType": "Return",
                  "src": "410:28:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "12065fe0",
            "id": 31,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "371:2:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 31,
                  "src": "394:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "393:6:0"
            },
            "scope": 45,
            "src": "352:93:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "487:80:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 34,
                          "name": "balanceReceived",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "506:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$15_storage_$",
                            "typeString": "mapping(address => struct MyMapping.Balance storage ref)"
                          }
                        },
                        "id": 37,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 35,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "522:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "522:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "506:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Balance_$15_storage",
                          "typeString": "struct MyMapping.Balance storage ref"
                        }
                      },
                      "id": 38,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "506:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 39,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "550:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "550:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "506:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "506:53:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "cbedbf5a",
            "id": 44,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendMoney",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "469:2:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "487:0:0"
            },
            "scope": 45,
            "src": "451:116:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 46,
        "src": "65:504:0"
      }
    ],
    "src": "40:529:0"
  },
  "bytecode": "0x608060405234801561001057600080fd5b506101a4806100206000396000f3fe6080604052600436106100345760003560e01c806312065fe014610039578063cbedbf5a14610064578063d18a42e11461006e575b600080fd5b34801561004557600080fd5b5061004e6100da565b6040518082815260200191505060405180910390f35b61006c6100f9565b005b34801561007a57600080fd5b506100bd6004803603602081101561009157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061014a565b604051808381526020018281526020019250505060405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282540192505081905550565b6000602052806000526040600020600091509050806000015490806001015490508256fea2646970667358221220427bb1c6164d79842c14f22cd96320a0d991597bc3db7de7f5f7a5c61afecd6864736f6c634300060c0033",
  "deployedBytecode": "0x6080604052600436106100345760003560e01c806312065fe014610039578063cbedbf5a14610064578063d18a42e11461006e575b600080fd5b34801561004557600080fd5b5061004e6100da565b6040518082815260200191505060405180910390f35b61006c6100f9565b005b34801561007a57600080fd5b506100bd6004803603602081101561009157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061014a565b604051808381526020018281526020019250505060405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282540192505081905550565b6000602052806000526040600020600091509050806000015490806001015490508256fea2646970667358221220427bb1c6164d79842c14f22cd96320a0d991597bc3db7de7f5f7a5c61afecd6864736f6c634300060c0033",
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang",
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "evmVersion": "petersburg"
  }
}
